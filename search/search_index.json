{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documenta\u00e7\u00e3o para desenvolvimento ESO","text":"<p>Este reposit\u00f3rio foi criado para auxiliar futuros alunos de GCES a contribuir com o desenvolvimento no External Secrets Operator(ESO). Relatando possiveis dificuldades que possam encontradas na configura\u00e7\u00e3o do ambiente e no desenvolvimento.</p> <p>A documenta\u00e7\u00e3o est\u00e1 dividida em tr\u00eas partes, o setup b\u00e1sico/instala\u00e7\u00e3o, um tutorial de como conectar com clusters kubernets locais ou por meio de ferramentas de computa\u00e7\u00e3o em nuvem como a AWS, Google cloud e Azure e uma pasta com links que podem auxiliar no aprendizado das ferramentas usadas no projeto.</p>"},{"location":"0-Glossario/glossario/","title":"Gloss\u00e1rio de Tecnologias Relacionadas ao ESO.","text":"<p>Este Gloss\u00e1rio est\u00e1 organizado em ordem alfab\u00e9tica. </p> Cluster <ul> <li> <p>O que \u00e9? </p> <p>\u00c9 um conjunto de n\u00f3s (computadores) que executam cargas de trabalho no Kubernetes, isto \u00e9, executar aplica\u00e7\u00f5es em container.</p> <p>\u00c9 uma t\u00e9cnica que agrupa v\u00e1rios recursos computacionais em uma \u00fanica unidade l\u00f3gica. Esses recursos s\u00e3o conectados em rede e trabalham em conjunto para executar tarefas, processar dados e armazenar informa\u00e7\u00f5es de maneira a melhorar o desempenho de aplica\u00e7\u00f5es, garantir alta disponibilidade, reduzir custos e aumentar a escalabilidade, j\u00e1 que os recursos podem ser compartilhados e distribu\u00eddos de maneira eficiente para atender \u00e0s demandas da aplica\u00e7\u00e3o em tempo real. Cada computador \u00e9 um \u201cn\u00f3\u201d, sendo que n\u00e3o h\u00e1 limites de quantos n\u00f3s podem ser interligados. </p> <p>O cluster \u00e9 o que proporciona a principal vantagem do Kubernetes: a capacidade de programar e executar containers em um conjunto de m\u00e1quinas f\u00edsicas, virtuais, on-premise ou na nuvem. Os containers do Kubernetes n\u00e3o est\u00e3o vinculados a m\u00e1quinas individuais. Na verdade, eles s\u00e3o abstra\u00eddos em todo o cluster.</p> </li> <li> <p>Para que serve?   O cluster tem a fun\u00e7\u00e3o de agrupar v\u00e1rias m\u00e1quinas em um sistema \u00fanico e eficiente, permitindo que aplica\u00e7\u00f5es distribu\u00eddas sejam executadas com maior desempenho e escalabilidade. No Kubernetes, ele facilita o gerenciamento de containers de forma a reduzir a complexidade, garantir alta disponibilidade e reduzir custos. O cluster Kubernetes geralmente possui um n\u00f3 principal que gerencia os pods e o ambiente de execu\u00e7\u00e3o do sistema.</p> </li> <li> <p>Links \u00fateis: </p> </li> <li>Introdu\u00e7\u00e3o aos Clusters</li> <li>O que \u00e9 um cluster do Kubernetes?</li> <li>Kubernetes Clusters: Everything You Need To Know</li> </ul> Docker <ul> <li> <p>O que \u00e9?   Docker \u00e9 uma plataforma aberta para o desenvolvimento, envio e execu\u00e7\u00e3o de aplica\u00e7\u00f5es. Ele permite que voc\u00ea separe suas aplica\u00e7\u00f5es da infraestrutura, facilitando a entrega de software de forma r\u00e1pida e eficiente, permitindo criar, compartilhar e executar aplica\u00e7\u00f5es e microsservi\u00e7os containerizados.</p> </li> <li> <p>Para que serve?   Possibilita a gest\u00e3o da infraestrutura ,utilizando suas metodologias para envio, teste e implanta\u00e7\u00e3o de c\u00f3digo. Com isso, \u00e9 poss\u00edvel reduzir significativamente o tempo entre a escrita do c\u00f3digo e a sua execu\u00e7\u00e3o em produ\u00e7\u00e3o.   Ele simplifica processos complexos, como mapeamento de portas, preocupa\u00e7\u00f5es com o sistema de arquivos e outras configura\u00e7\u00f5es padr\u00e3o, permitindo que o foco seja na escrita de c\u00f3digo.   Com ele, \u00e9 poss\u00edvel desenvolver a aplica\u00e7\u00e3o e seus componentes de apoio usando containers. Neste contexto, o container se torna a unidade para distribuir e testar a aplica\u00e7\u00e3o. Quando estiver pronto, \u00e9 poss\u00edvel implantar a aplica\u00e7\u00e3o no ambiente de produ\u00e7\u00e3o, seja ele local, na nuvem ou h\u00edbrido.</p> </li> <li> <p>Links \u00fateis: </p> </li> <li>Documenta\u00e7\u00e3o oficial</li> </ul> ESO - External Secrets Operator <ul> <li> <p>O que \u00e9?   \u00c9 um operador do Kubernetes que integra sistemas de gerenciamento de segredos externos (como AWS Secrets Manager, HashiCorp Vault, Google Secrets Manager, Azure Key Vault, IBM Cloud Secrets Manager, CyberArk Conjur, Pulumi ESC, entre outros). O operador l\u00ea informa\u00e7\u00f5es das APIs externas e injeta automaticamente os valores nos segredos do Kubernetes, permitindo sincronizar dados confidenciais de provedores externos.</p> </li> <li> <p>Para que serve?   Automatiza a sincroniza\u00e7\u00e3o de segredos de APIs externas com os clusters Kubernetes, garantindo seguran\u00e7a e efici\u00eancia na gest\u00e3o de credenciais. O ESO \u00e9 composto por um conjunto de recursos personalizados de API \u2014 ExternalSecret, SecretStore e ClusterSecretStore \u2014 que fornecem uma abstra\u00e7\u00e3o amig\u00e1vel para a API externa que armazena e gerencia o ciclo de vida dos segredos para voc\u00ea. Isso facilita a gest\u00e3o de segredos no Kubernetes ao integr\u00e1-los de maneira autom\u00e1tica com os provedores externos de segredos.</p> </li> <li> <p>Links \u00fateis: </p> </li> <li>Documenta\u00e7\u00e3o oficial</li> </ul> Go <ul> <li>O que \u00e9?   Uma linguagem de programa\u00e7\u00e3o de c\u00f3digo aberto criada pelo Google, conhecida pela simplicidade, desempenho, clareza e concis\u00e3o.</li> <li>Para que serve?   Usada no desenvolvimento de aplicativos, sistemas de backend e ferramentas, especialmente em ambientes de cloud e Kubernetes.   \u00c9 uma linguagem que oferece mecanismos de concorr\u00eancia que facilitam a escrita de programas capazes de aproveitar ao m\u00e1ximo m\u00e1quinas com m\u00faltiplos n\u00facleos e redes, enquanto seu sistema de tipos inovador permite a constru\u00e7\u00e3o de programas flex\u00edveis e modulares. Go compila rapidamente para c\u00f3digo de m\u00e1quina e, ao mesmo tempo, oferece conveni\u00eancia com coleta de lixo e o poder da reflex\u00e3o em tempo de execu\u00e7\u00e3o. \u00c9 uma linguagem compilada, estaticamente tipada, que tem a agilidade de linguagens dinamicamente tipadas e interpretadas.</li> <li>Links \u00fateis: </li> <li>Documenta\u00e7\u00e3o oficial</li> </ul> Helm <ul> <li>O que \u00e9?   Um gerenciador de pacotes para Kubernetes que facilita a implanta\u00e7\u00e3o e o gerenciamento de aplica\u00e7\u00f5es usando templates chamados \"charts\".</li> <li>Para que serve?   Simplifica a configura\u00e7\u00e3o, instala\u00e7\u00e3o e atualiza\u00e7\u00e3o de aplicativos no Kubernetes.</li> <li>Links \u00fateis: </li> <li>Documenta\u00e7\u00e3o oficial</li> <li>GitHub do projeto</li> </ul> HPA <ul> <li>O que \u00e9? Horizontal Pod Autoscaler (HPA)</li> <li>Para que serve?   \u00c9 usado para controlar a quantidade de Pods que h\u00e1 em um Deployment. Por exemplo, se o uso de CPU estiver muito alto, o HPA aumentaria a quantidade de pods. Tamb\u00e9m \u00e9 poss\u00edvel utilizar o Vertical Pod Autoscaler (VPA), que aumentaria a quantidade de recursos de cada pod em vez de aumentar a quantidade de Pod.</li> </ul> <p>Fonte:  Leo Michalski</p> Ingress <ul> <li>O que \u00e9?   Em um cluster Kubernetes no qual todas as requisi\u00e7\u00f5es chegam no mesmo IP e na mesma porta, os Ingresses s\u00e3o respons\u00e1veis por direcionar (de acordo com o DNS e o endpoint de cada requisi\u00e7\u00e3o) essas requisi\u00e7\u00f5es para os Services adequados. Tamb\u00e9m pode ser usado para outras finalidades.</li> </ul> <p>Fonte:  Leo Michalski</p> <ul> <li>Para que serve?   Oferece um ponto de entrada \u00fanico para rotear tr\u00e1fego para servi\u00e7os internos.</li> <li>Links \u00fateis: </li> <li>Sobre Ingress</li> </ul> Issuer <ul> <li>O que \u00e9?   Um componente em ferramentas como o Cert-Manager para emitir certificados.</li> <li> <p>Para que serve?   Gerencia a emiss\u00e3o de certificados TLS autom\u00e1ticos para servi\u00e7os em Kubernetes.Ele que emite o certificado SSL para os Ingresses poderem criptografar (com HTTPS) as requisi\u00e7\u00f5es que entram e saem, por exemplo.</p> </li> <li> <p>Links \u00fateis: </p> </li> <li>Documenta\u00e7\u00e3o do Cert-Manager</li> </ul> Kind <ul> <li>O que \u00e9?    \u00c9 uma ferramenta para executar clusters Kubernetes locais usando cont\u00eaineres Docker como \"n\u00f3s\" do cluster.</li> <li> <p>Para que serve?   O Kind foi projetado inicialmente para testar o pr\u00f3prio Kubernetes, mas tamb\u00e9m pode ser utilizado para desenvolvimento local ou integra\u00e7\u00e3o cont\u00ednua (CI). Ele permite criar clusters Kubernetes de forma simples em ambientes locais, facilitando testes e desenvolvimento sem a necessidade de infraestrutura complexa.</p> </li> <li> <p>Links \u00fateis: </p> </li> <li>Site oficial</li> </ul> <p><p>Imagem 2 - kind - Kubernetes no Docker</p></p> <p></p> <p><p>Fonte: Kind</p></p> Kubectl <ul> <li>O que \u00e9?   O kubectl \u00e9 uma ferramenta de linha de comando para se comunicar com o plano de controle de um cluster Kubernetes, utilizando a API do Kubernetes.</li> <li> <p>Para que serve?   Executa opera\u00e7\u00f5es no Kubernetes, como criar pods e monitorar o status do cluster.   Permite que voc\u00ea interaja com o cluster Kubernetes, realizando opera\u00e7\u00f5es como cria\u00e7\u00e3o, gerenciamento e visualiza\u00e7\u00e3o de recursos. Ele busca um arquivo de configura\u00e7\u00e3o chamado config no diret\u00f3rio $HOME/.kube, que cont\u00e9m as informa\u00e7\u00f5es sobre como se conectar ao cluster.</p> </li> <li> <p>Links \u00fateis: </p> </li> <li>Documenta\u00e7\u00e3o oficial - Kubernetes</li> </ul> Kubernetes <ul> <li>O que \u00e9?   Uma plataforma de orquestra\u00e7\u00e3o de cont\u00eaineres que automatiza a implanta\u00e7\u00e3o, escala e gerenciamento de aplicativos. \u00c9 Open Source.</li> <li>Para que serve?   Garante alta disponibilidade, escalabilidade e monitoramento de aplica\u00e7\u00f5es em cont\u00eaineres.</li> <li>Links \u00fateis: </li> <li>Documenta\u00e7\u00e3o oficial</li> <li>GitHub do projeto</li> </ul> Nginx <ul> <li> <p>O que \u00e9?   \u00c9 um servidor web HTTP de c\u00f3digo aberto que tamb\u00e9m pode funcionar como proxy reverso, balanceador de carga, cache de conte\u00fado, servidor proxy TCP/UDP e servidor proxy de e-mail. \u00c9 amplamente utilizado devido \u00e0 sua alta performance e capacidade de gerenciar grandes volumes de tr\u00e1fego.</p> </li> <li> <p>Para que serve?   O Nginx \u00e9 utilizado para servir conte\u00fados web, gerenciar tr\u00e1fego de rede e balancear a carga entre servidores, al\u00e9m de atuar como proxy reverso e cache de conte\u00fado. Ele pode ser usado para melhorar a escalabilidade e a performance de aplica\u00e7\u00f5es web, distribuindo eficientemente as requisi\u00e7\u00f5es entre m\u00faltiplos servidores.   Possui um processo principal que gerencia a configura\u00e7\u00e3o e v\u00e1rios processos de trabalho que fazem o processamento das requisi\u00e7\u00f5es. Ele distribui as requisi\u00e7\u00f5es de forma eficiente, e o n\u00famero de processos de trabalho pode ser ajustado de acordo com o n\u00famero de n\u00facleos do processador.</p> </li> <li> <p>Links \u00fateis: </p> </li> <li>Documenta\u00e7\u00e3o oficial </li> </ul> Lint <ul> <li>O que \u00e9?   Um processo de an\u00e1lise est\u00e1tica do c\u00f3digo para identificar erros, problemas de estilo e  inconformidades com as melhores pr\u00e1ticas de codifica\u00e7\u00e3o.</li> <li>Para que serve?   Serve para garantir a qualidade, consist\u00eancia e a conformidade do c\u00f3digo com padr\u00f5es predefinidos, ajudando a identificar erros de sintaxe, problemas de formata\u00e7\u00e3o e m\u00e1s pr\u00e1ticas de desenvolvimento antes da execu\u00e7\u00e3o do c\u00f3digo. Ele contribui para a manuten\u00e7\u00e3o de um c\u00f3digo limpo, leg\u00edvel e eficiente.</li> <li>Links \u00fateis: </li> <li>Introdu\u00e7\u00e3o ao linting</li> </ul> Pods <ul> <li>O que \u00e9?   A menor unidade de computa\u00e7\u00e3o em Kubernetes, que agrupa um ou mais cont\u00eaineres.</li> <li>Para que serve?   Gerencia cont\u00eaineres que compartilham recursos e atuam como uma \u00fanica entidade em um cluster.</li> <li>Links \u00fateis: </li> <li>Sobre Pods</li> </ul> <p><p>Imagem 3 - Organiza\u00e7\u00e3o dos Pods em um cluster</p></p> <p></p> <p><p>Fonte: Armosec blog</p></p> Secrets <ul> <li>O que \u00e9? S\u00e3o os dados sens\u00edveis que queremos armazenar, gerenciar e utilizar usando o ESO.</li> </ul> Tilt <ul> <li>O que \u00e9?   Uma ferramenta que ajuda no desenvolvimento local para Kubernetes, permitindo visualizar e gerenciar rapidamente altera\u00e7\u00f5es em aplicativos.</li> <li>Para que serve?   Facilita o fluxo de desenvolvimento em Kubernetes, atualizando o estado do cluster automaticamente com base nas mudan\u00e7as no c\u00f3digo. Ele tem uma interface e automatiza muitas coisas que ter\u00edamos que fazer manualmente tamb\u00e9m! </li> <li>Links \u00fateis: </li> <li>Site oficial</li> <li>Documenta\u00e7\u00e3o</li> </ul> yq <ul> <li>O que \u00e9?   Uma ferramenta que vamos instalar para manipular arquivos YAML em linha de comando, semelhante ao jq para JSON.</li> <li>Para que serve?   Edita, transforma e consulta arquivos YAML. S\u00e3o nos arquivos YAML que vamos escrever como vai ser a configura\u00e7\u00e3o das aplica\u00e7\u00f5es, servi\u00e7os ou clusters.</li> <li>Links \u00fateis: </li> <li>GitHub do yq</li> </ul>"},{"location":"1-Setup/1-Pre_requisitos/","title":"Pre-Requisitos","text":""},{"location":"1-Setup/1-Pre_requisitos/#qual-o-objetivo-do-external-secrets-operator","title":"Qual o objetivo do External Secrets Operator ?","text":"<p>O objetivo do External Secrets Operator (ESO) \u00e9 sincronizar chaves secretas de APIs externas com o Kubernetes. O ESO \u00e9 uma cole\u00e7\u00e3o de recursos personalizados da API - ExternalSecret, SecretStore e ClusterSecretStore - que fornecem uma abstra\u00e7\u00e3o amig\u00e1vel para o usu\u00e1rio da API externa, armazenando e gerenciando o ciclo de vida das chaves para voc\u00ea.</p>"},{"location":"1-Setup/1-Pre_requisitos/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<p>Para colaborar com o projeto External Secrets Operator (ESO), \u00e9 necess\u00e1rio instalar algumas ferramentas no computador. Neste guia, ser\u00e1 explicado o que \u00e9 cada ferramenta, por que \u00e9 necess\u00e1ria, a vers\u00e3o recomendada e como instal\u00e1-la no sistema operacional correspondente.</p>"},{"location":"1-Setup/1-Pre_requisitos/#sistemas-operacionais-suportados","title":"Sistemas Operacionais Suportados","text":"<p>Para colaborar com o projeto External Secrets Operator (ESO), \u00e9 recomendado utilizar sistemas operacionais baseados em Unix, como Linux e macOS. O ambiente de desenvolvimento do ESO \u00e9 principalmente voltado para esses sistemas, e muitas das ferramentas e scripts utilizados no desenvolvimento s\u00e3o projetados para funcionar neles.</p>"},{"location":"1-Setup/1-Pre_requisitos/#e-possivel-desenvolver-no-windows","title":"\u00c9 poss\u00edvel desenvolver no Windows?","text":"<p>\u00c9 poss\u00edvel utilizar o Windows para o desenvolvimento, mas h\u00e1 considera\u00e7\u00f5es importantes a serem feitas. Como o ambiente de desenvolvimento do ESO n\u00e3o \u00e9 otimizado para o Windows, podem surgir pro   blemas de incompatibilidade com ferramentas como Make, Tilt e scripts shell. Os scripts de automa\u00e7\u00e3o e comandos presentes no projeto s\u00e3o escritos para ambientes Unix, utilizando bash scripting, o que pode n\u00e3o ser compat\u00edvel com o Windows sem adapta\u00e7\u00f5es. Este tutorial n\u00e3o cobrir\u00e1 a instala\u00e7\u00e3o e configura\u00e7\u00e3o de ferramentas no Windows devido \u00e0 complexidade e falta de testes.</p>"},{"location":"1-Setup/1-Pre_requisitos/#instalar-go-golang","title":"Instalar Go (Golang)","text":"Sobre o Golang  O que \u00e9 Go? <p> Go, tamb\u00e9m conhecido como Golang, \u00e9 uma linguagem de programa\u00e7\u00e3o criada pelo Google. \u00c9 conhecida por ser eficiente, f\u00e1cil de aprender e excelente para desenvolver aplicativos r\u00e1pidos e escal\u00e1veis.</p>  Por que \u00e9 necess\u00e1rio Go? <p> No projeto External Secrets Operator, Go \u00e9 utilizado para desenvolver partes fundamentais do c\u00f3digo. \u00c9 necess\u00e1rio para compilar, executar e contribuir com o c\u00f3digo-fonte do projeto.</p> Instala\u00e7\u00e3o do Golang  Vers\u00e3o Necess\u00e1ria <p>Vers\u00e3o m\u00ednima: Go 1.20 ou superior.</p> <p>Vers\u00e3o recomendada: Go 1.23.3</p>  Durante o desenvolvimento deste guia, a vers\u00e3o mais recente do Go \u00e9 a 1.23.3, a qual funcionou perfeitamente com o projeto External Secrets Operator. Vers\u00f5es anteriores apresentaram falhas nos testes da aplica\u00e7\u00e3o. Antes de testar o projeto, verifique sua vers\u00e3o do Go.  Como Instalar Go Instala\u00e7\u00e3o no Linux 1. Baixar o arquivo de instala\u00e7\u00e3o do Go: <p>Acesse o site oficial ou use o comando abaixo:</p> <pre><code>wget https://golang.org/dl/go1.23.3.linux-amd64.tar.gz</code>\n    2. Remover instala\u00e7\u00f5es anteriores do Go:\n    <pre><code>sudo rm -rf /usr/local/go</code>\n    3. Extrair o novo arquivo do Go para `/usr/local`:\n    <pre><code>sudo tar -C /usr/local -xzf go1.23.3.linux-amd64.tar.gz</code>\n    4. Atualizar o PATH adicionando `/usr/local/go/bin`:\n    <p>Edite o arquivo `~/.profile` ou `/etc/profile` e adicione:</p>\n    <pre><code>export PATH=$PATH:/usr/local/go/bin</code>\n    <p>Ou execute diretamente no terminal para a sess\u00e3o atual:</p>\n    <pre><code>export PATH=$PATH:/usr/local/go/bin</code>\n    5. Aplicar as altera\u00e7\u00f5es do PATH imediatamente:\n    <pre><code>source ~/.profile</code>\n    6. Verificar a instala\u00e7\u00e3o do Go e se est\u00e1 na vers\u00e3o suportada:\n    <pre><code>go version</code>\n    Nota: Para Debian/Ubuntu, \u00e9 poss\u00edvel instalar o Go utilizando o Snap:\n    <pre><code>sudo snap install --classic go</code>\n  \n\n\n  Instala\u00e7\u00e3o no macOS\n  1. Baixar o arquivo de instala\u00e7\u00e3o do Go:\n  Apple macOS (ARM64), macOS 11 ou superior\n  Apple macOS (Intel), macOS 10.15 ou superior\n  2. Executar o arquivo baixado e seguir as instru\u00e7\u00f5es de instala\u00e7\u00e3o.\n  <p>O pacote instala a distribui\u00e7\u00e3o do Go em `/usr/local/go`. O instalador deve adicionar o diret\u00f3rio `/usr/local/go/bin` \u00e0 vari\u00e1vel de ambiente `PATH`. Pode ser necess\u00e1rio reiniciar qualquer sess\u00e3o aberta do Terminal para que a altera\u00e7\u00e3o entre em vigor.</p>\n  3. Verificar a instala\u00e7\u00e3o do Go e se est\u00e1 na vers\u00e3o suportada:\n  <pre><code>go version</code>\n\n\n<p>Quaisquer d\u00favidas ou problemas com a instala\u00e7\u00e3o do Go, consulte a documenta\u00e7\u00e3o oficial.</p>"},{"location":"1-Setup/1-Pre_requisitos/#instalar-helm","title":"Instalar Helm","text":"Sobre o Helm\n  O que \u00e9 o Helm?\n  <p>O Helm \u00e9 um gerenciador de pacotes para Kubernetes, a plataforma que automatiza a implanta\u00e7\u00e3o, escalonamento e gerenciamento de aplicativos em cont\u00eaineres.</p>\n\n  Por que \u00e9 necess\u00e1rio o Helm?\n  <p>No projeto External Secrets Operator, o Helm \u00e9 utilizado para simplificar a instala\u00e7\u00e3o e gerenciamento de aplica\u00e7\u00f5es dentro do Kubernetes, automatizando processos complexos de configura\u00e7\u00e3o e implanta\u00e7\u00e3o.</p>\n\n\n\n  Instala\u00e7\u00e3o do Helm\n  Vers\u00e3o Necess\u00e1ria\n  <p>Vers\u00e3o recomendada: Helm 3 (vers\u00e3o mais recente do Helm 3).</p>\n  Como Instalar o Helm\n\n  \n    Instala\u00e7\u00e3o no Linux\n    1. Baixar o script de instala\u00e7\u00e3o:\n    <pre><code>curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3</code></pre>\n    2. Tornar o script execut\u00e1vel:\n    <pre><code>chmod 700 get_helm.sh</code></pre>\n    3. Executar o script de instala\u00e7\u00e3o:\n    <pre><code>./get_helm.sh</code></pre>\n    4. Verificar a instala\u00e7\u00e3o do Helm:\n    <pre><code>helm version</code></pre>\n  \n\n  \n    Instala\u00e7\u00e3o no macOS\n    1. Usando o Homebrew:\n    <pre><code>brew install helm</code></pre>\n    2. Verificar a instala\u00e7\u00e3o do Helm:\n    <pre><code>helm version</code></pre>\n  \n\n  <p>Para outras op\u00e7\u00f5es de instala\u00e7\u00e3o e mais detalhes, consulte o guia oficial de instala\u00e7\u00e3o do Helm.</p>"},{"location":"1-Setup/1-Pre_requisitos/#instalar-yq","title":"Instalar yq","text":"Sobre o yq\n  O que \u00e9 o yq?\n  <p>O yq \u00e9 uma ferramenta de linha de comando para ler, manipular e escrever arquivos YAML, amplamente utilizados para configura\u00e7\u00f5es.</p>\n\n  Por que \u00e9 necess\u00e1rio o yq?\n  <p>No projeto External Secrets Operator, o yq \u00e9 utilizado para automatizar a edi\u00e7\u00e3o de arquivos de configura\u00e7\u00e3o YAML, facilitando ajustes e implementa\u00e7\u00f5es.</p>\n\n\n\n  Instala\u00e7\u00e3o do yq\n  Vers\u00e3o Necess\u00e1ria\n  <p>Vers\u00e3o recomendada: yq v4.44.3 ou superior.</p>\n\n  Como Instalar o yq\n\n  \n    Instala\u00e7\u00e3o no Linux\n    1. Baixar o bin\u00e1rio do yq:\n    <pre><code>wget https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64.tar.gz</code></pre>\n    2. Extrair o arquivo baixado:\n    <pre><code>tar xvf yq_linux_amd64.tar.gz</code></pre>\n    3. Mover o bin\u00e1rio para <code>/usr/local/bin</code> e tornar execut\u00e1vel:\n    <pre><code>sudo mv yq_linux_amd64 /usr/local/bin/yq</code></pre>\n    <pre><code>sudo chmod +x /usr/local/bin/yq</code></pre>\n    4. Verificar a instala\u00e7\u00e3o do yq:\n    <pre><code>yq --version</code></pre>\n    \n      Alternativa: Caso encontre problemas, instale via Snap:\n      <pre><code>sudo snap install yq</code></pre>\n    \n  \n\n  \n    Instala\u00e7\u00e3o no macOS\n    1. Usando o Homebrew:\n    <pre><code>brew install yq</code></pre>\n    2. Verificar a instala\u00e7\u00e3o do yq:\n    <pre><code>yq --version</code></pre>\n  \n\n  <p>Para outras op\u00e7\u00f5es de instala\u00e7\u00e3o e mais detalhes, consulte o reposit\u00f3rio oficial do yq.</p>"},{"location":"1-Setup/1-Pre_requisitos/#instalar-jq","title":"Instalar jq","text":"Sobre o jq\n  O que \u00e9 o jq?\n  <p>O jq \u00e9 uma ferramenta de linha de comando para processar e manipular dados em formato JSON.</p>\n\n  Por que \u00e9 necess\u00e1rio o jq?\n  <p>No projeto External Secrets Operator, o jq \u00e9 essencial para trabalhar com dados JSON, permitindo filtrar e transformar informa\u00e7\u00f5es de forma eficiente.</p>\n\n\n\n  Instala\u00e7\u00e3o do jq\n  Vers\u00e3o Necess\u00e1ria\n  <p>Vers\u00e3o recomendada: jq 1.6 ou superior.</p>\n\n  Como Instalar o jq\n\n  \n    Instala\u00e7\u00e3o no Linux\n    1. Para Debian/Ubuntu:\n    <pre><code>sudo apt-get install jq</code></pre>\n    2. Para Fedora:\n    <pre><code>sudo dnf install jq</code></pre>\n    3. Verificar a instala\u00e7\u00e3o do jq:\n    <pre><code>jq --version</code></pre>\n  \n\n  \n    Instala\u00e7\u00e3o no macOS\n    1. Usando o Homebrew:\n    <pre><code>brew install jq</code></pre>\n    2. Verificar a instala\u00e7\u00e3o do jq:\n    <pre><code>jq --version</code></pre>\n  \n\n  <p>Para outras op\u00e7\u00f5es de instala\u00e7\u00e3o e mais detalhes, consulte o site oficial do jq.</p>"},{"location":"1-Setup/1-Pre_requisitos/#instalar-docker","title":"Instalar Docker","text":"Sobre o Docker\n  O que \u00e9 o Docker?\n  <p>O Docker \u00e9 uma plataforma que permite criar, implantar e executar aplicativos em cont\u00eaineres. Os cont\u00eaineres permitem empacotar uma aplica\u00e7\u00e3o com todas as suas depend\u00eancias em uma unidade padr\u00e3o para desenvolvimento e implanta\u00e7\u00e3o.</p>\n\n  Por que \u00e9 necess\u00e1rio o Docker?\n  <p>No projeto External Secrets Operator, o Docker \u00e9 usado para criar imagens de cont\u00eaineres e executar servi\u00e7os em ambientes isolados. \u00c9 essencial para o desenvolvimento, teste e implanta\u00e7\u00e3o da aplica\u00e7\u00e3o dentro de um ambiente Kubernetes.</p>\n\n\n\n  Instala\u00e7\u00e3o do Docker\n  Como Instalar o Docker\n\n  \n    Instala\u00e7\u00e3o no Linux\n    1. Atualizar os pacotes existentes:\n    <pre><code>sudo apt-get update</code></pre>\n    2. Instalar pacotes necess\u00e1rios:\n    <code>sudo apt-get install \\\n                ca-certificates \\\n                curl \\\n                gnupg \\\n                lsb-release</code>\n    3. Adicionar a chave GPG oficial do Docker:\n    <pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</code></pre>\n    4. Adicionar o reposit\u00f3rio do Docker:\n    <pre><code>echo \\\n\"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \\\nhttps://download.docker.com/linux/ubuntu \\\n$(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre>\n    5. Instalar o Docker Engine:\n    <pre><code>sudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io</code></pre>\n    6. Verificar a instala\u00e7\u00e3o do Docker:\n    <pre><code>sudo docker run hello-world</code></pre>\n  \n\n  \n    Instala\u00e7\u00e3o no macOS\n    1. Baixar o Docker Desktop para macOS:\n    <p>Acesse o site oficial e baixe o Docker Desktop:</p>\n    <ul>\n      <li>Docker Desktop para Mac com Intel Chip</li>\n      <li>Docker Desktop para Mac com Apple Chip (M1)</li>\n    </ul>\n    2. Instalar o Docker Desktop:\n    <ol>\n      <li>Abra o arquivo <code>Docker.dmg</code>.</li>\n      <li>Arraste o \u00edcone do Docker para a pasta <code>Applications</code>.</li>\n      <li>Inicie o Docker Desktop a partir da pasta <code>Applications</code>.</li>\n    </ol>\n    3. Verificar a instala\u00e7\u00e3o do Docker:\n    <pre><code>docker --version</code></pre>\n  \n\n  <p>Para outras op\u00e7\u00f5es de instala\u00e7\u00e3o e mais detalhes, consulte a documenta\u00e7\u00e3o oficial do Docker.</p>\n\n\n\n  Configura\u00e7\u00e3o necess\u00e1ria no Docker\n  Configurar Docker para Uso sem Root\n  <p>Por padr\u00e3o, o Docker requer privil\u00e9gios de superusu\u00e1rio (root) para executar. Para facilitar o uso, \u00e9 recomendado adicionar o usu\u00e1rio atual ao grupo <code>docker</code> para executar comandos sem <code>sudo</code>.</p>\n\n  \n    Passos para configurar o Docker sem root no Linux\n    1. Criar o grupo docker (se n\u00e3o existir):\n    <pre><code>sudo groupadd docker</code></pre>\n    2. Adicionar o usu\u00e1rio atual ao grupo docker:\n    <pre><code>sudo usermod -aG docker $USER</code></pre>\n    3. Aplicar as altera\u00e7\u00f5es de grupo sem fazer logout:\n    <pre><code>newgrp docker</code></pre>\n    4. Verificar se \u00e9 poss\u00edvel executar o Docker sem sudo:\n    <pre><code>docker run hello-world</code></pre>\n    <p>Se o comando funcionar sem erros, a configura\u00e7\u00e3o foi bem-sucedida.</p>"},{"location":"1-Setup/1-Pre_requisitos/#instalar-kubectl","title":"Instalar kubectl","text":"Sobre o kubectl\n  O que \u00e9 o kubectl?\n  <p>O kubectl \u00e9 a ferramenta de linha de comando para gerenciar clusters Kubernetes. Permite executar comandos no cluster, gerenciar recursos e depurar aplica\u00e7\u00f5es.</p>\n  Por que \u00e9 necess\u00e1rio o kubectl?\n  <p>No projeto External Secrets Operator, o kubectl \u00e9 usado para interagir com o cluster Kubernetes local ou remoto, aplicar configura\u00e7\u00f5es e verificar o estado dos recursos implantados.</p>\n\n\n\n  Instala\u00e7\u00e3o do kubectl\n  Vers\u00e3o Necess\u00e1ria\n  <p>Vers\u00e3o compat\u00edvel com a vers\u00e3o do Kubernetes instalada (geralmente a vers\u00e3o est\u00e1vel mais recente).</p>\n  Como Instalar o kubectl\n  \n    Instala\u00e7\u00e3o no Linux\n    1. Baixar a vers\u00e3o mais recente do kubectl:\n    <pre><code>curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"</code></pre>\n    2. Tornar o bin\u00e1rio execut\u00e1vel:\n    <pre><code>chmod +x kubectl</code></pre>\n    3. Mover o bin\u00e1rio para o PATH:\n    <pre><code>sudo mv kubectl /usr/local/bin/</code></pre>\n    4. Verificar a instala\u00e7\u00e3o do kubectl:\n    <pre><code>kubectl version --client</code></pre>\n  \n\n  \n    Instala\u00e7\u00e3o no macOS\n    1. Usando o Homebrew:\n    <pre><code>brew install kubectl</code></pre>\n    2. Verificar a instala\u00e7\u00e3o do kubectl:\n    <pre><code>kubectl version --client</code></pre>\n  \n\n  <p>Para outras op\u00e7\u00f5es de instala\u00e7\u00e3o e mais detalhes, consulte a documenta\u00e7\u00e3o oficial do kubectl.</p>"},{"location":"1-Setup/1-Pre_requisitos/#instalar-ctlptl-e-criar-um-cluster-kind-com-registro-local","title":"Instalar ctlptl e criar um cluster Kind com registro local","text":"Sobre o ctlptl\n  O que \u00e9 o ctlptl?\n  <p>O ctlptl (Control Plane Tool) \u00e9 uma ferramenta para gerenciar clusters locais de desenvolvimento Kubernetes. Ele facilita a cria\u00e7\u00e3o e gerenciamento de clusters como o Kind (Kubernetes in Docker) e a configura\u00e7\u00e3o de registros locais de cont\u00eainer.</p>\n  Por que \u00e9 necess\u00e1rio o ctlptl?\n  <p>No projeto External Secrets Operator, o ctlptl \u00e9 usado para criar e gerenciar um cluster Kubernetes local usando o Kind, al\u00e9m de configurar um registro local de cont\u00eainer para armazenar imagens Docker durante o desenvolvimento.</p>\n\n\n\n  Instala\u00e7\u00e3o do ctlptl\n  Vers\u00e3o Necess\u00e1ria\n  <p>Vers\u00e3o mais recente dispon\u00edvel do ctlptl.</p>\n\n  Como Instalar o ctlptl\n\n \n  Instala\u00e7\u00e3o no Linux\n  1. Instalar o ctlptl:\n  <p>Use o comando abaixo para instalar a vers\u00e3o <code>0.8.36</code> do ctlptl diretamente em <code>/usr/local/bin</code>. Substitua <code>0.8.36</code> por outra vers\u00e3o, se necess\u00e1rio.</p>\n  <pre><code>\nCTLPTL_VERSION=\"0.8.36\"\ncurl -fsSL https://github.com/tilt-dev/ctlptl/releases/download/v$CTLPTL_VERSION/ctlptl.$CTLPTL_VERSION.linux.x86_64.tar.gz | sudo tar -xzv -C /usr/local/bin ctlptl\n  </code></pre>\n\n  2. Verificar a instala\u00e7\u00e3o do ctlptl:\n  <pre><code>\nctlptl version\n  </code></pre>\n\n\n\n  Instala\u00e7\u00e3o via Go\n  1. Certifique-se de que o Go est\u00e1 instalado:\n  <p>Se o Go n\u00e3o estiver instalado, siga as instru\u00e7\u00f5es no site oficial do Go.</p>\n\n  2. Instale o ctlptl via Go:\n  <pre><code>\ngo install github.com/tilt-dev/ctlptl/cmd/ctlptl@latest\n  </code></pre>\n\n  3. Adicione o diret\u00f3rio <code>$GOPATH/bin</code> ao PATH (se necess\u00e1rio):\n  <pre><code>\nexport PATH=$PATH:$(go env GOPATH)/bin\n  </code></pre>\n\n  4. Verifique a instala\u00e7\u00e3o do ctlptl:\n  <pre><code>\nctlptl version\n  </code></pre>\n\n\n  \n    Instala\u00e7\u00e3o no macOS\n    1. Usando o Homebrew:\n    <pre><code>brew install tilt-dev/tap/ctlptl</code></pre>\n    2. Verificar a instala\u00e7\u00e3o do ctlptl:\n    <pre><code>ctlptl version</code></pre>\n  \n\n\nCriar um Cluster Kind com Registro Local\n\n\n  Sobre o Kind\n  <p>O Kind (Kubernetes in Docker) \u00e9 uma ferramenta para executar clusters Kubernetes locais usando cont\u00eaineres Docker como n\u00f3s do cluster.</p>\n\n\n\n  Como Criar um Cluster Kind com Registro Local\n  1. Criar um registro local de cont\u00eainer:\n  <pre><code>docker run -d --restart=always -p \"5000:5000\" --name kind-registry registry:2</code></pre>\n  2. Criar um cluster Kind usando o ctlptl e conect\u00e1-lo ao registro local:\n  <pre><code>ctlptl create cluster kind --registry=kind-registry</code></pre>\n  <p>Isso criar\u00e1 um cluster Kind configurado para usar o registro local em <code>localhost:5000</code>.</p>\n  3. Verificar se o cluster est\u00e1 funcionando:\n  <pre><code>kubectl cluster-info --context kind-kind</code></pre>\n  4. Listar os clusters gerenciados pelo ctlptl:\n  <pre><code>ctlptl get clusters</code></pre>"},{"location":"1-Setup/1-Pre_requisitos/#instalar-tilt","title":"Instalar Tilt","text":"Sobre o Tilt\n  O que \u00e9 o Tilt?\n  <p>O Tilt \u00e9 uma ferramenta que agiliza o desenvolvimento em ambientes Kubernetes. Automatiza a constru\u00e7\u00e3o, implanta\u00e7\u00e3o e monitoramento do c\u00f3digo, permitindo um ciclo de desenvolvimento mais r\u00e1pido.</p>\n  Por que \u00e9 necess\u00e1rio o Tilt?\n  <p>No projeto External Secrets Operator, o Tilt \u00e9 utilizado para desenvolver e testar altera\u00e7\u00f5es no c\u00f3digo de forma eficiente, refletindo mudan\u00e7as quase instantaneamente no ambiente Kubernetes local.</p>\n\n\n\n  Instala\u00e7\u00e3o do Tilt\n  Vers\u00e3o Necess\u00e1ria\n  <ul>\n    <li>Pr\u00e9-requisitos: Instalar o Docker, kubectl, Kind e ctlptl.</li>\n    <li>Vers\u00e3o recomendada: Vers\u00e3o mais recente dispon\u00edvel.</li>\n  </ul>\n\n  Como Instalar o Tilt\n\n  \n    Instala\u00e7\u00e3o no Linux\n    1. Baixar e executar o script de instala\u00e7\u00e3o:\n    <pre><code>curl -fsSL https://raw.githubusercontent.com/tilt-dev/tilt/master/scripts/install.sh | bash</code></pre>\n    2. Verificar a instala\u00e7\u00e3o do Tilt:\n    <pre><code>tilt version</code></pre>\n  \n\n  \n    Instala\u00e7\u00e3o no macOS\n    1. Usando o Homebrew:\n    <pre><code>brew install tilt-dev/tap/tilt</code></pre>\n    2. Verificar a instala\u00e7\u00e3o do Tilt:\n    <pre><code>tilt version</code></pre>\n  \n\n  <p>Para outras op\u00e7\u00f5es de instala\u00e7\u00e3o e mais detalhes, consulte o guia oficial de instala\u00e7\u00e3o do Tilt.</p>"},{"location":"1-Setup/2-Configurar_Kubernetes/","title":"Instalar e configurar Kubernets","text":"<p>Para mais detalhes checar tutorial e a documenta\u00e7\u00e3o oficial.</p>"},{"location":"1-Setup/2-Configurar_Kubernetes/#instalar-docker","title":"Instalar Docker","text":"<pre><code>curl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh\n\n# testar\nsudo docker version\n</code></pre>"},{"location":"1-Setup/2-Configurar_Kubernetes/#instalar-kind-kubernetes-in-docker","title":"Instalar Kind (Kubernetes In Docker)","text":""},{"location":"1-Setup/2-Configurar_Kubernetes/#para-linux-amd64-x86_64","title":"Para Linux AMD64 / x86_64","text":"<pre><code>curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64\nchmod +x ./kind\nsudo mv ./kind /usr/local/bin/kind\n\n# testar\nkind --version\n</code></pre>"},{"location":"1-Setup/2-Configurar_Kubernetes/#para-macos-usando-homebrew","title":"Para MacOs usando Homebrew","text":"<pre><code>brew install kind\n\n# testar\nkind --version\n</code></pre> <p>Mais op\u00e7\u00f5es de instala\u00e7\u00e3o em https://kind.sigs.k8s.io/docs/user/quick-start/#installation</p>"},{"location":"1-Setup/2-Configurar_Kubernetes/#instalar-kubectl","title":"Instalar kubectl","text":""},{"location":"1-Setup/2-Configurar_Kubernetes/#para-linux-amd64-x86_65","title":"Para Linux AMD64 / x86_64","text":"<pre><code>curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\nchmod +x ./kubectl\nsudo mv ./kubectl /usr/local/bin/kubectl\n\n# testar\nkubectl version\n</code></pre>"},{"location":"1-Setup/2-Configurar_Kubernetes/#para-macos-usando-homebrew_1","title":"Para MacOs usando Homebrew","text":"<pre><code>brew install kubectl\n\nor\n\nbrew install kubernetes-cli\n\n# testar\nkubectl version --client\n</code></pre> <p>Mais op\u00e7\u00f5es de instala\u00e7\u00e3o em https://kubernetes.io/docs/tasks/tools/#kubectl</p>"},{"location":"1-Setup/2-Configurar_Kubernetes/#instalar-helm3","title":"Instalar Helm3","text":"<pre><code>curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3\nchmod 700 get_helm.sh\nsh ./get_helm.sh\n\n# testar\nhelm version\n</code></pre>"},{"location":"1-Setup/2-Configurar_Kubernetes/#para-macos-usando-homebrew_2","title":"Para MacOs usando Homebrew","text":"<pre><code>brew install helm\n\n# testar\nhelm version\n</code></pre> <p>Mais op\u00e7\u00f5es de instala\u00e7\u00e3o em https://helm.sh/docs/intro/install/</p>"},{"location":"1-Setup/2-Configurar_Kubernetes/#configuracao-do-kind","title":"Configura\u00e7\u00e3o do Kind","text":""},{"location":"1-Setup/2-Configurar_Kubernetes/#clonar-este-repositorio-e-acessa-lo","title":"Clonar este reposit\u00f3rio e acess\u00e1-lo","text":"<pre><code>git clone https://github.com/leomichalski/kubernetes-para-devs.git\ncd kubernetes-para-devs\n</code></pre>"},{"location":"1-Setup/2-Configurar_Kubernetes/#navegar-ate-a-pasta-setup-do-repositorio","title":"Navegar at\u00e9 a pasta setup do reposit\u00f3rio","text":"<pre><code>cd setup\n</code></pre>"},{"location":"1-Setup/2-Configurar_Kubernetes/#comecar-cluster-kubernetes-com-kind","title":"Come\u00e7ar cluster Kubernetes com Kind","text":"<pre><code>kind create cluster --config kind_config.yaml\n</code></pre>"},{"location":"1-Setup/2-Configurar_Kubernetes/#salver-arquivo-kubeconfig-para-poder-usar-o-kubectl","title":"Salver arquivo kubeconfig para poder usar o kubectl","text":"<pre><code>kind get kubeconfig --name aula-gces | tee kubeconfig\n</code></pre>"},{"location":"1-Setup/2-Configurar_Kubernetes/#testar-kubectl","title":"Testar kubectl","text":"<pre><code>kubectl get nodes --kubeconfig kubeconfig\n</code></pre>"},{"location":"1-Setup/3-Configurar_ESO/","title":"Configurar o External Secrets Operator","text":"<p>Aqui ser\u00e1 feita a configura\u00e7\u00e3o e utiliza\u00e7\u00e3o do ESO. Para conseguir acompanhar, \u00e9 preciso ter seguido os passos de configura\u00e7\u00e3o inicial dos pr\u00e9 requisitos.</p>"},{"location":"1-Setup/3-Configurar_ESO/#clonar-o-repositorio","title":"Clonar o reposit\u00f3rio","text":"<pre><code>git clone https://github.com/external-secrets/external-secrets.git\ncd external-secrets\n</code></pre>"},{"location":"1-Setup/3-Configurar_ESO/#instalar-helm-unittest","title":"Instalar helm-unittest","text":"<p>Helm Unittest \u00e9 uma ferramenta que busca melhorar a qualidade e confiabilidade de suas aplica\u00e7\u00f5es em ambientes Kubernetes. Instalar helm-unittest para poder realizar testes automatizados no ESO.</p> <pre><code>helm plugin install https://github.com/helm-unittest/helm-unittest\n</code></pre>"},{"location":"1-Setup/3-Configurar_ESO/#build","title":"Build","text":""},{"location":"1-Setup/3-Configurar_ESO/#importancia-dos-comandos-make-build-e-make-dockerbuild-em-um-projeto-go","title":"Import\u00e2ncia dos comandos <code>make build</code> e <code>make docker.build</code> em um projeto Go","text":""},{"location":"1-Setup/3-Configurar_ESO/#comandos","title":"Comandos","text":""},{"location":"1-Setup/3-Configurar_ESO/#1-make-build","title":"1. <code>make build</code>","text":"<ul> <li>O que faz:</li> <li> <p>Compila o c\u00f3digo Go e gera o bin\u00e1rio do projeto.</p> </li> <li> <p>Import\u00e2ncia:</p> </li> <li>Facilita a constru\u00e7\u00e3o do bin\u00e1rio, executando os comandos necess\u00e1rios automaticamente.</li> <li>Garante que o bin\u00e1rio seja gerado de maneira consistente, seguindo as configura\u00e7\u00f5es definidas no <code>Makefile</code>.</li> <li>Permite a verifica\u00e7\u00e3o r\u00e1pida de problemas de compila\u00e7\u00e3o e depend\u00eancias.</li> </ul>"},{"location":"1-Setup/3-Configurar_ESO/#2-make-dockerbuild-image_nameexternal-secrets-image_taglatest","title":"2. <code>make docker.build IMAGE_NAME=external-secrets IMAGE_TAG=latest</code>","text":"<ul> <li>O que faz: </li> <li>Constr\u00f3i uma imagem Docker do projeto utilizando o bin\u00e1rio gerado no passo anterior.</li> <li> <p>A imagem \u00e9 nomeada como <code>external-secrets</code> e marcada com a tag <code>latest</code> (ou outra tag especificada).</p> </li> <li> <p>Import\u00e2ncia:</p> </li> <li>Empacota o bin\u00e1rio Go e suas depend\u00eancias em uma imagem Docker, tornando o projeto port\u00e1til e pronto para execu\u00e7\u00e3o em qualquer ambiente que suporte Docker.</li> <li>\u00c9 essencial para projetos Kubernetes, como o External Secrets Operator, porque permite que o aplicativo seja distribu\u00eddo e implantado como um cont\u00eainer.</li> <li>Automatiza o processo de cria\u00e7\u00e3o da imagem, reduzindo erros manuais e melhorando a efici\u00eancia no pipeline de CI/CD.</li> </ul>"},{"location":"1-Setup/3-Configurar_ESO/#fluxo-de-uso","title":"Fluxo de Uso","text":"<ol> <li>Primeiro, construa o bin\u00e1rio do projeto com o comando:    <code>bash    make build</code></li> <li>Ap\u00f3s utilize o binario gerado para criar uma imagem docker:     <code>bash     make docker.build IMAGE_NAME=external-secrets IMAGE_TAG=latest</code></li> </ol>"},{"location":"1-Setup/3-Configurar_ESO/#testes","title":"Testes","text":""},{"location":"1-Setup/3-Configurar_ESO/#importancia-dos-comandos-make-test-e-make-lint-em-um-projeto-go","title":"Import\u00e2ncia dos comandos <code>make test</code> e <code>make lint</code> em um projeto Go","text":""},{"location":"1-Setup/3-Configurar_ESO/#comandos-e-fluxo-de-uso","title":"Comandos e Fluxo de Uso","text":""},{"location":"1-Setup/3-Configurar_ESO/#1-rodar-testes","title":"1. Rodar testes","text":"<pre><code>make test\n</code></pre>"},{"location":"1-Setup/3-Configurar_ESO/#o-que-faz","title":"O que faz:","text":"<ul> <li>Executa os testes automatizados do projeto utilizando as ferramentas e configura\u00e7\u00f5es definidas no <code>Makefile</code>.</li> </ul>"},{"location":"1-Setup/3-Configurar_ESO/#importancia","title":"Import\u00e2ncia:","text":"<ul> <li>Garante que as funcionalidades do projeto est\u00e3o funcionando corretamente e que altera\u00e7\u00f5es no c\u00f3digo n\u00e3o introduzem regress\u00f5es.</li> <li>Automatiza a execu\u00e7\u00e3o dos testes, tornando o processo r\u00e1pido e consistente.</li> <li>Facilita a integra\u00e7\u00e3o cont\u00ednua (CI), permitindo detectar problemas antes de avan\u00e7ar para est\u00e1gios posteriores no pipeline de desenvolvimento.</li> </ul>"},{"location":"1-Setup/3-Configurar_ESO/#lint","title":"Lint","text":""},{"location":"1-Setup/3-Configurar_ESO/#importancia-do-comando-make-lint-em-um-projeto-go","title":"Import\u00e2ncia do comando <code>make lint</code> em um projeto Go","text":""},{"location":"1-Setup/3-Configurar_ESO/#o-que-faz_1","title":"O que faz:","text":"<ul> <li>O comando <code>make lint</code> verifica a qualidade do c\u00f3digo utilizando ferramentas de an\u00e1lise est\u00e1tica, como o <code>golangci-lint</code>.</li> <li>O comando com Docker executa o <code>golangci-lint</code> dentro de um cont\u00eainer, permitindo rodar o lint mesmo sem a ferramenta instalada localmente.</li> </ul>"},{"location":"1-Setup/3-Configurar_ESO/#importancia_1","title":"Import\u00e2ncia:","text":"<ul> <li>Identifica problemas no estilo de codifica\u00e7\u00e3o, poss\u00edveis bugs e m\u00e1s pr\u00e1ticas antes mesmo de rodar ou testar o c\u00f3digo.</li> <li>Melhora a legibilidade e a qualidade do c\u00f3digo, alinhando-o aos padr\u00f5es estabelecidos pela equipe ou pela comunidade Go.</li> <li>A vers\u00e3o com Docker garante que a ferramenta de linting ser\u00e1 executada com as configura\u00e7\u00f5es corretas, mesmo que o ambiente local n\u00e3o tenha o <code>golangci-lint</code> instalado.</li> </ul>"},{"location":"1-Setup/3-Configurar_ESO/#rodar-lint-no-codigo","title":"Rodar lint no c\u00f3digo:","text":"<pre><code>make lint # OU\ndocker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v1.49.0 golangci-lint run\n</code></pre>"},{"location":"1-Setup/3-Configurar_ESO/#rodar-a-documentacao","title":"Rodar a documenta\u00e7\u00e3o:","text":"<pre><code>make docs\n</code></pre>"},{"location":"2-Conectando/ESO-Vault/","title":"Utilizando o External Secrets Operator com o Vault","text":"<p>Neste documento voc\u00ea aprender\u00e1 como utilizar o ESO (External Secrets Operator) em conjunto com o Vault, o gerenciador de segredos da HashiCorp, em um cluster Kubernetes local configurado com Kind.</p>"},{"location":"2-Conectando/ESO-Vault/#criacao-do-cluster","title":"Cria\u00e7\u00e3o do cluster","text":"<p>Para esse exemplo, utilizaremos um cluster Kubernetes local criado com o Kind. Com a seguinte configura\u00e7\u00e3o:</p> <pre><code>apiVersion: kind.x-k8s.io/v1alpha4\nkind: Cluster\nnodes:\n  - role: control-plane\n  - role: worker\n  - role: worker\n</code></pre> <p>Salve a configura\u00e7\u00e3o acima em um arquivo e execute o comando abaixo:</p> <pre><code>kind create cluster --config &lt;arquivo&gt;\n</code></pre>"},{"location":"2-Conectando/ESO-Vault/#adicionando-vault-ao-cluster","title":"Adicionando Vault ao cluster","text":"<p>Podemos utilizar o Helm para instalar o Vault no cluster.</p> <pre><code>helm repo add hashicorp https://helm.releases.hashicorp.com\nhelm install vault hashicorp/vault\n</code></pre> <p>Para verificar os recursos criados, execute:</p> <pre><code>kubectl get all | grep vault\n</code></pre>"},{"location":"2-Conectando/ESO-Vault/#configurando-o-vault","title":"Configurando o Vault","text":"<p>Antes de adicionar o ESO, \u00e9 necess\u00e1rio configurar o Vault. Um maneira simples de realizar esse processo \u00e9 expondo a porta do <code>service/Vault</code>, utilizando o comando abaixo. Dessa forma, \u00e9 poss\u00edvel acessar sua interface web em: <code>http://localhost:8200</code>.</p> <pre><code>kubectl port-forward svc/vault --address 0.0.0.0 8200:8200\n</code></pre> <p>Preencha os campos Key shares e Key threshold com o valor 1 e clique em Initialize.</p> <p>Salve a chave gerada e o initial token, pois ser\u00e3o necess\u00e1rias para desbloquear o Vault. Clique em Continue.</p> <p>Utilize a <code>key1</code> para desbloquear o Vault e o <code>root token</code> para logar.</p>"},{"location":"2-Conectando/ESO-Vault/#engine-de-segredos","title":"Engine de Segredos","text":"<p>Na interface web do Vault, clique em <code>Secrets Engines</code> na barra lateral e em seguida em <code>Enable new engine</code>. Selecione a engine de segredos do tipo <code>Key/Value</code> KV e clique em Enable engine.</p> <p>Com a engine habilitada, crique em <code>Create secret</code> e crie um segredo de chave <code>segredo1</code> com um valor arbitr\u00e1rio. No campo de <code>Path</code> insira <code>tutorial/</code> e clique em Save.</p>"},{"location":"2-Conectando/ESO-Vault/#adicionando-o-eso-ao-cluster","title":"Adicionando o ESO ao cluster","text":"<p>Utilize o helm para instalar o ESO no cluster.</p> <pre><code>helm repo add external-secrets https://charts.external-secrets.io\nhelm install external-secrets \\\n   external-secrets/external-secrets \\\n    -n external-secrets \\\n    --create-namespace\n</code></pre> <p>Para verificar os recursos criados, execute:</p> <pre><code>kubectl -n external-secrets get all\n</code></pre>"},{"location":"2-Conectando/ESO-Vault/#criando-um-clustersecretstore","title":"Criando um ClusterSecretStore","text":"<p>O ClusterSecretStore \u00e9 respons\u00e1vel por armazenar as configura\u00e7\u00f5es de acesso ao Vault. Para que ele tenha acesso ao Vault, \u00e9 necess\u00e1rio criar um secret com o token de acesso.</p> <pre><code>kubectl create secret generic vault-policy-token --from-literal=token=&lt;token&gt;\n</code></pre> <p>Para criar o ClusterSecretStore, utilize o arquivo abaixo: O atributo server precisa ser preenchido com o ClusterIP do Vault. utilize o comando <code>kubectl get svc vault</code> para obter o ClusterIP.</p> <pre><code>apiVersion: external-secrets.io/v1beta1\nkind: ClusterSecretStore\nmetadata:\n  name: vault-backend\nspec:\n  provider:\n    vault:\n      server: \"http://&lt;ClusterIP&gt;:8200\" # Endere\u00e7o do ClusterIP \n      path: kv # Path do segredo criado no Vault\n      version: \"v2\"\n      auth:\n        tokenSecretRef:\n          name: \"vault-policy-token\" # Nome do secret que cont\u00e9m o token\n          key: \"token\"               # Chave do token no secret\n</code></pre> <p>Para criar o recurso, salve a configura\u00e7\u00e3o em um arquivo e execute.</p> <pre><code>kubectl apply -f &lt;arquivo&gt;\n</code></pre>"},{"location":"2-Conectando/ESO-Vault/#criando-um-externalsecret","title":"Criando um ExternalSecret","text":"<p>O ExternalSecret \u00e9 respons\u00e1vel por criar a secret no cluster Kubernetes com o segredo do Vault.</p> <pre><code>apiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: external-secrets\nspec:\n  refreshInterval: 10s          # Intervalo de atualiza\u00e7\u00e3o do segredo\n  secretStoreRef:\n    name: vault-backend\n    kind: ClusterSecretStore\n  target:\n    name: eso-secret            # Nome da secret que ser\u00e1 criada\n    creationPolicy: Owner\n  data:\n    - secretKey: segredo1       # Nome da chave do segredo\n      remoteRef:\n        key: kv/tutorial\n        property: segredo1\n</code></pre> <p>Para criar o recurso, salve a configura\u00e7\u00e3o em um arquivo e execute.</p> <pre><code>kubectl apply -f &lt;arquivo&gt;\n</code></pre> <p>Ap\u00f3s a cria\u00e7\u00e3o do ExternalSecret, a secret pode ser verificada utilizando o comando:</p> <pre><code>kubectl get secret\n</code></pre> <p>Para verificar o conte\u00fado da secret, utilize o comando:</p> <pre><code>kubectl get secret eso-secret -o yaml\n</code></pre> <p>copie o valor do atributo <code>data.segredo1</code> no yaml gerado e decodifique utilizando o comando:</p> <pre><code>echo \"&lt;valor-copiado&gt;\" | base64 -d\n</code></pre> <p>Atualize o segredo no Vault e verifique se a secret foi atualizada no cluster Kubernetes.</p>"},{"location":"2-Conectando/Local/","title":"Conex\u00e3o ESO local","text":"<p>Aqui ser\u00e1 mostrado como criar um POD e fazer a conex\u00e3o com o ESO. Para fazer testes mais complexos e espec\u00edficos crie o seu pr\u00f3pio cluster Kubernet.</p>"},{"location":"2-Conectando/Local/#configurar-um-pod-basico","title":"Configurar um POD b\u00e1sico","text":""},{"location":"2-Conectando/Local/#ver-pods-existentes-no-namespace-default","title":"Ver pods existentes no namespace \"default\"","text":"<p>Para executar o comando abaixo, \u00e9 necess\u00e1rio estar no mesmo reposit\u00f3rio onde o seu kubeconfig est\u00e1. Ap\u00f3s fazer essa verifica\u00e7\u00e3o, execute o comando:</p> <pre><code>kubectl get pods --namespace default --kubeconfig kubeconfig\n</code></pre> <p>O comando \u00e9 usado para listar todos os pods no namespace \"default\" de um cluster Kubernetes. A op\u00e7\u00e3o --kubeconfig kubeconfig especifica o arquivo de configura\u00e7\u00e3o a ser usado para se conectar ao cluster.</p>"},{"location":"2-Conectando/Local/#criar-o-pod-definido-no-arquivo-podyaml","title":"Criar o Pod definido no arquivo <code>pod.yaml</code>","text":"<p>Para executar o comando abaixo, certifique-se de que o caminho para o arquivo <code>pod.yml</code> especificado no comando est\u00e1 correto.</p> <pre><code>kubectl apply -f ../parte01/pod.yaml --namespace default --kubeconfig kubeconfig\n</code></pre> <p>O comando cria ou atualiza os recursos definidos no arquivo <code>pod.yml</code>  no namespace default, utilizando o arquivo de configura\u00e7\u00e3o kubeconfig para se conectar ao cluster.</p>"},{"location":"2-Conectando/Local/#testar-acesso-ao-postgres","title":"Testar acesso ao Postgres","text":"<p>Fazer \"port forwarding\" para ver se o Postgres est\u00e1 funcionando. Port forwarding \u00e9 \u00f3timo para debugar aplica\u00e7\u00f5es.</p> <pre><code>kubectl port-forward pod/exemplo-postgres 5432:5432 --namespace default --kubeconfig kubeconfig\n</code></pre> <p>Acessar Postgres usando <code>psql</code> (tamb\u00e9m \u00e9 poss\u00edvel usar <code>pgadmin</code>, <code>dbeaver</code> e outras ferramentas).</p> <pre><code>psql --host localhost --port 5432 --username postgres postgres\n</code></pre>"},{"location":"2-Conectando/Local/#rodando-o-eso","title":"Rodando o ESO","text":"<p>Para rodar o ESO ser\u00e1 utilizado o tilt, a forma mais simples de se fazer a conex\u00e3o e verificar as modifica\u00e7\u00f5es feitas no c\u00f3digo.</p> <p>Para rodar, v\u00e1 para a raiz do arquivo em que o reposit\u00f3rio foi clonado, e utilize o seguinte comando com o POD subido:</p> <pre><code>make tilt-up\n</code></pre>"},{"location":"2-Conectando/Local/#deletar-o-pod-criado-anteriormente","title":"Deletar o Pod criado anteriormente","text":"<p>Para finalizar o POD rode:</p> <pre><code>kubectl delete pod/exemplo-postgres --namespace default --kubeconfig kubeconfig\n</code></pre>"},{"location":"3-Links/Links/","title":"Links auxiliares a respeito do ESO, Kubernetes, Golang","text":"<p>Esse documento cont\u00e9m links auxiliares para quem busca entender melhor sobre algumas ferramentas necess\u00e1rias para contribuir com o projeto External Secrets Operator (ESO).</p>"},{"location":"3-Links/Links/#kubernetes","title":"Kubernetes","text":"<p>Documenta\u00e7\u00e3o oficial do Kubernetes  Cont\u00e9m documenta\u00e7\u00e3o oficial detalhada para instalar, configurar e utilizar o Kubernetes.</p> <p>Kubernetes Passos Iniciais   V\u00eddeo tutorial ensinando os primeiros passos para se trabalhar com Kubernetes. \u00datil para quem prefere uma aprendizagem mais visual.</p>"},{"location":"3-Links/Links/#golang","title":"Golang","text":"<p>Golang-Documenta\u00e7\u00e3o  Cont\u00e9m documenta\u00e7\u00e3o oficial completa sobre a linguagem de programa\u00e7\u00e3o Go.</p> <p>Golang-Exercism   Plataforma com exerc\u00edcios pr\u00e1ticos de programa\u00e7\u00e3o em Go. Excelente para quem quer melhorar suas habilidades atrav\u00e9s da pr\u00e1tica.</p>"},{"location":"3-Links/Links/#eso","title":"ESO","text":"<p>ESO-Documenta\u00e7\u00e3o  Documenta\u00e7\u00e3o oficial do External Secrets Operator (ESO) para gerenciamento de segredos no Kubernetes.</p> <p>Kubernetes Secrets Management with ESO  V\u00eddeo tutorial sobre como gerenciar segredos no Kubernetes utilizando o ESO. </p>"},{"location":"4-Common_issues/Make_issue/","title":"Problema com yq e jq no setup do projeto","text":"<p>Esse documento tem o objetivo de expor um problema encontrado durante o setup do projeto relacionado \u00e0s bibliotecas yq e jq no linux.</p>"},{"location":"4-Common_issues/Make_issue/#contexto","title":"Contexto","text":"<p>O problema foi identificado j\u00e1 no inicio do setup do projeto, durante uma tentativa de execu\u00e7\u00e3o do comando:</p> <pre><code>make build \n</code></pre>"},{"location":"4-Common_issues/Make_issue/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<p>Ao executar o comando <code>make build</code> dentro da raiz do projeto do ESO, \u00e9 necess\u00e1ria a utiliza\u00e7\u00e3o de uma biblioteca chamada <code>yq</code> que realiza processamento de arquivos com extens\u00e3o YAML, XML ou TOML e trabalha em conjunto com o <code>jq</code> para extrair e trabalhar com campos espec\u00edficos de um arquivo convertido pra objeto (JSON) pelo <code>yq</code>.</p> <p>Na documenta\u00e7\u00e3o oficial do ESO, consta que de fato \u00e9 necess\u00e1rio possuir instalada na m\u00e1quina a biblioteca <code>yq</code> com vers\u00e3o igual ou superior a 4.2X.X.</p> <p></p> <p>No entanto vale ressaltar que para que o yq funcione corretamente \u00e9 obrigat\u00f3rio se ter instalada tamb\u00e9m sua depend\u00eancia, o jq. As instru\u00e7\u00f5es de instala\u00e7\u00e3o de cada um podem ser acessadas nos respectivos links:</p> <ul> <li>yq installation</li> <li>jq installation</li> </ul> <p>As configura\u00e7\u00f5es do ambiente no qual o problema foi identificado s\u00e3o:</p> Par\u00e2metro Valor Vers\u00e3o Sistema operacional Debian GNU/Linux 12 (bookworm) x86_64 12 Golang go1.23.0 linux/amd64 1.23.0 yq yq version 4.2.0 4.2.0 jq jq-1.6 1.6"},{"location":"4-Common_issues/Make_issue/#descricao-do-problema","title":"Descri\u00e7\u00e3o do problema","text":"<p>Ao executar o <code>make build</code>, \u00e9 retornado o seguinte erro no std output:</p> <p></p> <p>O projeto n\u00e3o \u00e9 montado como deveria, e essa mensagem \u00e9 exibida no terminal, seguida do trecho de help do manual do yq.</p>"},{"location":"4-Common_issues/Make_issue/#possiveis-causas-e-troubleshooting","title":"Poss\u00edveis causas e troubleshooting","text":""},{"location":"4-Common_issues/Make_issue/#incompatibilidade-de-versao","title":"Incompatibilidade de vers\u00e3o","text":"<p>Estimamos que uma das causas do problema possa estar relacionado a problemas de vers\u00e3o entre as ferramentas que o make utiliza para montar o projeto. </p> <p>Recomendamos que ao se deparar com esse problema, verifique as vers\u00f5es de cada uma dessas duas ferramentas no seu sistema e se est\u00e3o de acordo com o pedido pelo ESO, e ainda se o pr\u00f3prio jq est\u00e1 instalado por se tratar de uma depend\u00eancia auxiliar que pode n\u00e3o vir por padr\u00e3o no seu sistema.</p> <p>Abaixo est\u00e3o alguns fluxos de troubleshooting que podem ajudar:</p>"},{"location":"4-Common_issues/Make_issue/#versao-inconsistente","title":"Vers\u00e3o inconsistente","text":"<p>Nas primeiras tentativas tamb\u00e9m foi identificado um problema em que o yq mostrava vers\u00e3o 0.0.0, para isso bastou desinstalar o yq com o gerenciador de pacotes padr\u00e3o do debian (apt) com o comando </p> <pre><code>sudo apt remove yq\nsudo apt autoremove # remove dependencias que nao sao mais utilizadas\n</code></pre>"},{"location":"4-Common_issues/Make_issue/#executaveis-conflitantes","title":"Execut\u00e1veis conflitantes","text":"<p>OBS2: Verificar tamb\u00e9m se mesmo removendo o yq, alguma vers\u00e3o conflitante n\u00e3o permanece no sistema. Caso o pacote j\u00e1 tenha sido removido via apt/snap/flatpak, e o comando <code>yq --version</code> ainda retorne uma vers\u00e3o v\u00e1lida, o bin\u00e1rio que est\u00e1 sendo executado pode ser encontrado e removido com os seguintes comandos:</p> <pre><code>sudo which yq\nsudo rm /path/to/bin/yq # Esse deve ser o path retornado pelo comando which\n</code></pre>"},{"location":"4-Common_issues/Make_issue/#instalar-versoes-alternativas-ao-package-manager-da-distribuicao-linux","title":"Instalar vers\u00f5es alternativas ao package manager da distribui\u00e7\u00e3o linux","text":"<p>A solu\u00e7\u00e3o que melhor funcionou para resolver essa etapa do setup, foi a de instalar essas ferramentas por meios alternativos ao apt. Para isso primeiro \u00e9 importante remover as duas ferramentas do sistema para garantir uma instala\u00e7\u00e3o \"limpa\".</p>"},{"location":"4-Common_issues/Make_issue/#instalando-yq-mais-atualizado","title":"instalando yq mais atualizado","text":"<p>A vers\u00e3o mais atualizada encontrada foi diretamente no bin\u00e1rios disponibilizado nessa p\u00e1gina do github do yq</p> <p>Pode ser instalada com: </p> <pre><code>sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq &amp;&amp; sudo chmod +x /usr/bin/yq \n</code></pre> <p>O sudo \u00e9 necess\u00e1rio pois est\u00e1 sendo adicionado o bin\u00e1rio direto no diret\u00f3rio padr\u00e3o (que geralmente j\u00e1 est\u00e1 no $PATH) do sistema para execut\u00e1veis. Caso deseje, pode alterar o path de download e:</p> <ol> <li>Adicionar manualmente o diret\u00f3rio escolhido ao $PATH, ou</li> <li>Criar um \"alias\" no .bashrc do seu sistema com o valor do path para o bin\u00e1rio.</li> </ol> <p>O resultado ap\u00f3s essa instala\u00e7\u00e3o \u00e9: </p> <p></p>"},{"location":"4-Common_issues/Make_issue/#instalando-jq-mais-atualizado","title":"instalando jq mais atualizado","text":"<p>A vers\u00e3o mais atualizada do bin\u00e1rio do jq pode ser baixada atrav\u00e9s do link na documenta\u00e7\u00e3o de instala\u00e7\u00e3o jq</p> <p>Para o caso desse projeto, a vers\u00e3o escolhida foi a 1.7.1 AMD64.</p> <p></p> <p>Ao clicar no link um bin\u00e1rio do jq ser\u00e1 baixado para o diret\u00f3rio de Downloads definido no seu navegador. Para garantir que o bin\u00e1rio ser\u00e1 encontrado durante a execu\u00e7\u00e3o make, siga os passos a seguir:</p> <ol> <li>Abra o terminal e navegue at\u00e9 o path de download do bin\u00e1rio</li> <li>Adicione a permiss\u00e3o de execu\u00e7\u00e3o do bin\u00e1rio com o seguinte comando: </li> </ol> <pre><code>sudo chmod +x nome_do_arquivo # substitua pelo nome do seu arquivo, no nosso caso o arquivo chamava-se jq-linux-amd64\n</code></pre> <ol> <li>Navegue para o seu diret\u00f3rio Home: <code>$ cd ~</code></li> <li>Abra o arquivo oculto <code>.bashrc</code> (caso n\u00e3o exista, crie-o com <code>touch .bashrc</code>)</li> <li>Adicione ao final do arquivo o seguinte alias:</li> </ol> <pre><code>alias jq=\"/path/para/o/seu/binario_jq\" # Substitua pelo path onde est\u00e1 o execut\u00e1vel baixado\n</code></pre> <ol> <li>Ap\u00f3s salvar e fechar o arquivo, basta abrir um novo terminal e verificar que o jq est\u00e1 acess\u00edvel:</li> </ol> <p></p> <p>OBS: Para esse tutorial foi usado o bash, caso esteja utilizando um shell diferente, busque adaptar os comandos e arquivos de configura\u00e7\u00e3o quando necess\u00e1rio</p> <p>OBS2: Uma alternativa \u00e0 cria\u00e7\u00e3o do alias, \u00e9 adicionar o path do bin\u00e1rio (ap\u00f3s a execu\u00e7\u00e3o do chmod +x) \u00e0 vari\u00e1vel $PATH. Para isso pode ser editado/criado o arquivo .profile na sua home.</p>"},{"location":"4-Common_issues/Make_issue/#verificando-a-solucao","title":"Verificando a solu\u00e7\u00e3o","text":"<p>Ap\u00f3s instaladas as vers\u00f5es anteriores do jq e yq, o comando make build foi executado corretamente:</p>"},{"location":"4-Common_issues/Make_issue/#versoes-e-execucao-do-make-build","title":"Vers\u00f5es e execu\u00e7\u00e3o do make build","text":"<p>S\u00e3o instaladas algumas dependencias do GO...</p> <p>E o resultado:</p> <p></p>"},{"location":"4-Common_issues/make-docker_issue/","title":"Problemas enquanto executa \"make docker.build IMAGE_NAME=external-secrets IMAGE_TAG=latest\"","text":""},{"location":"4-Common_issues/make-docker_issue/#problema-1","title":"Problema 1:","text":""},{"location":"4-Common_issues/make-docker_issue/#erro","title":"ERRO:","text":"<pre><code>test -s /home/meu-user/\u00c1rea de Trabalho/GCES/external-secrets/bin/tilt || curl -fsSL https://github.com/tilt-dev/tilt/releases/download/v0.33.10/tilt.0.33.10.linux.x86_64.tar.gz | tar -xz -C /home/meu-user/\u00c1rea de Trabalho/GCES/external-secrets/bin tilt\n/bin/bash: linha 1: test: n\u00famero excessivo de argumentos\ntar: de: N\u00e3o foi encontrado no arquivo-tar\ntar: Trabalho/GCES/external-secrets/bin: N\u00e3o foi encontrado no arquivo-tar\ntar: Saindo com status de falha em raz\u00e3o de erros anteriores\nmake: *** [Makefile:355: de] Erro 2\n</code></pre>"},{"location":"4-Common_issues/make-docker_issue/#solucao-e-explicacao","title":"Solu\u00e7\u00e3o e explica\u00e7\u00e3o:","text":"<p>Esse \"n\u00famero excessivo de argumentos\" era sobre literalmente o nome do diret\u00f3rio \"\u00c1rea de Trabalho\". A solu\u00e7\u00e3o felizmente foi f\u00e1cil: Colocar a pasta, nesta caso \"GCES\" em outro diret\u00f3rio como \"Documentos\" por exemplo. Depois que organizar isso, tente novamente rodar \"make docker.build IMAGE_NAME=external-secrets IMAGE_TAG=latest\" na pasta do external-secrets no novo diret\u00f3rio.</p>"},{"location":"4-Common_issues/make-docker_issue/#problema-2","title":"Problema 2:","text":""},{"location":"4-Common_issues/make-docker_issue/#erro_1","title":"ERRO:","text":"<pre><code>./hack/crd.generate.sh: linha 19: jq: comando n\u00e3o encontrado\nmake: *** [Makefile:136: generate] Erro 127\n</code></pre>"},{"location":"4-Common_issues/make-docker_issue/#solucao-e-explicacao_1","title":"Solu\u00e7\u00e3o e explica\u00e7\u00e3o:","text":"<p>Esse erro aconteceu antes da documenta\u00e7\u00e3o desse reposit\u00f3rio estar atualizada, ent\u00e3o \u00e9 improv\u00e1vel que ele volte a acontecer. Se voc\u00ea \u00e9 sortudo e aconteceu com voc\u00ea, esse comando resolve rapidinho. Depois que ele executar, tente novamente rodar \"make docker.build IMAGE_NAME=external-secrets IMAGE_TAG=latest\" na pasta do external-secrets.</p> <pre><code>sudo apt install jq\n</code></pre>"}]}